name: Automated pre_dev to dev

on:
  workflow_dispatch

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    steps:
    - name: create pull request
      run: gh pr create -B dev -H pre_dev --title 'Merge pre_dev into dev' --body 'Created by Github action'
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Wait for branch protection checks
      #   uses: actions/github-script@v6
      #   if: steps.create-pr.outputs.pull-request-number
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const prNumber = ${{ steps.create-pr.outputs.pull-request-number }};
      #       const startTime = Date.now();
      #       const maxWaitTime = 15 * 60 * 1000; // 15 minutes in milliseconds

      #       while (Date.now() - startTime < maxWaitTime) {
      #         const { data: pr } = await github.rest.pulls.get({
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           pull_number: prNumber,
      #         });

      #         if (pr.mergeable_state === 'clean') {
      #           console.log('Branch protection requirements met. Proceeding to merge.');
      #           return 'success';
      #         }

      #         console.log('Waiting for branch protection checks to pass...');
      #         await new Promise(resolve => setTimeout(resolve, 60000)); // Wait for 60 seconds
      #       }

      #       console.log('Timeout reached. Branch protection requirements not met.');
      #       return 'timeout';

      # - name: Merge Pull Request
      #   if: steps.wait-for-checks.outputs.result == 'success'
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const prNumber = ${{ steps.create-pr.outputs.pull-request-number }};
      #       await github.rest.pulls.merge({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: prNumber,
      #         merge_method: 'merge'
      #       });

      # - name: Close Pull Request
      #   if: steps.wait-for-checks.outputs.result == 'timeout'
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const prNumber = ${{ steps.create-pr.outputs.pull-request-number }};
      #       await github.rest.issues.createComment({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         issue_number: prNumber,
      #         body: 'Closing this PR as checks did not pass within 15 minutes.'
      #       });
      #       await github.rest.pulls.update({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: prNumber,
      #         state: 'closed'
      #       });
